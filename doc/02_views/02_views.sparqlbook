[
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Nilea UI Views\n\n# Architecture\n## Archimate Context Diagram\n\nThis defines the input graph for the context diagram. \n\n```ttl\n@prefix : <http://example.org/> .\n@prefix nileaUi: <http://localhost/nileaUi/> .\n\nnileaUi:ContextDiagram1 a nileaUi::ContextDiagram ;\n    nileaUi:hasSources\"foo\" .\n    nileaUi:hasSources\"bar\" .\n    nileaUi:hasTargets\"baz\" .\n    nileaUi:hasTargets\"qux\" .\n    nileaUi:hasCenterComponent \"App Component One\".\n```\n\nA query can look like this ...\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ea: <http://example.org/ea/>\nPREFIX local: <http://localhost/data> \n\nSELECT ?subject ?centerLabel ?sourceIri\t?sourceLabel ?destinationIri ?destinationLabel ?eaIri WHERE {\n    {\n        {\n            SELECT ?eaIri WHERE {\n                BIND(UUID() AS ?eaIri)\n            }\n        }\n        {\n            BIND (<https://ld.bafu.zazukoians.org/edc/fews> as ?subject)\n            ?subject rdfs:label ?centerLabel .\n        } UNION\n        {\n            BIND (<https://ld.bafu.zazukoians.org/edc/fews> as ?subject)\n            ?subject ^ea:target/ea:source ?sourceIri .\n            ?sourceIri rdfs:label ?sourceLabel .\n        } UNION {\n            BIND (<https://ld.bafu.zazukoians.org/edc/fews> as ?subject)\n            ?subject ^ea:source/ea:target ?destinationIri .\n            ?destinationIri rdfs:label ?destinationLabel .\n        }\n    }\n}\n\n\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "looks good.... now the construct version of it",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ea: <http://example.org/ea/>\n\nPREFIX  nileaUi: <https://zazuko.com/nilea/ui/> \nPREFIX  local: <http://localhost/data> \n\nCONSTRUCT {\n    ?componentIri nileaUi:hasComponentData ?componentDataIri .\n    ?componentDataIri a nileaUi:ContextDiagramData;\n        nileaUi:hasSource ?sourceIri;\n        nileaUi:hasDestination ?destinationIri;\n        nileaUi:hasCenter ?subject;\n    .\n    ?sourceIri rdfs:label ?sourceLabel .\n    ?subject rdfs:label ?centerLabel .\n    ?destinationIri rdfs:label ?destinationLabel .\n} WHERE {\n    {\n        ?subject rdfs:label ?centerLabel .\n    } UNION\n    {\n        ?subject ^ea:target/ea:source ?sourceIri .\n        ?sourceIri rdfs:label ?sourceLabel .\n    } UNION {\n        ?subject ^ea:source/ea:target ?destinationIri .\n        ?destinationIri rdfs:label ?destinationLabel .\n    }\n}\nVALUES (?subject ?diagramIri ?componentIri) { \n    (<https://ld.bafu.zazukoians.org/edc/fews> local:ContextDiagram1 local:Component1)\n    }\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "That's the quey for  the context diagram data. Now this query is tied to the Type `schema:SoftwareApplication`. \n\nThat means for every Type a query like this that produces the same output. ",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "How have to store this query in the database and associate it with the Type and the ViewComponent `nileaUi:ContextDiagram`.\n\n\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\nPREFIX  nileaUi: <https://zazuko.com/nilea/> \n\nSELECT * WHERE {\n    {\n        {\n            SELECT ?view  WHERE {\n                ?view a nileaUi:UiView; \n                    nileaUi:forClass ?type .\n            }\n        }\n        ?view ?pView ?oView .\n    } UNION {\n        {\n            {\n                SELECT ?viewComponent WHERE {\n                    ?view a nileaUi:UiView; \n                        nileaUi:forClass ?type ;\n                        nileaUi:viewComponent ?viewComponent .\n                }\n            }\n            ?viewComponent ?pViewComponent ?oViewComponent.\n        }\n    } UNION {\n        {\n            {\n                SELECT ?component WHERE {\n                    ?view a nileaUi:UiView; \n                        nileaUi:forClass ?type ;\n                        nileaUi:viewComponent ?viewComponent .\n                         ?viewComponent nileaUi:hasComponent ?component .\n                }\n            }\n            ?component ?pComponent ?oComponent.\n        }\n    }\n  \n}\nVALUES (?type ) {\n    ( <http://schema.org/SoftwareApplication> )\n}\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\nPREFIX nileaUi: <https://zazuko.com/nilea/> \n\nCONSTRUCT {\n    ?view ?pView ?oView .\n    ?viewComponent ?pViewComponent ?oViewComponent.\n    ?component ?pComponent ?oComponent.\n} WHERE {\n    {\n        {\n            SELECT ?view  WHERE {\n                ?view a nileaUi:UiView; \n                    nileaUi:forClass ?type .\n            }\n        }\n        ?view ?pView ?oView .\n    } UNION {\n        {\n            {\n                SELECT ?viewComponent WHERE {\n                    ?view a nileaUi:UiView; \n                        nileaUi:forClass ?type ;\n                        nileaUi:viewComponent ?viewComponent .\n                }\n            }\n            ?viewComponent ?pViewComponent ?oViewComponent.\n        }\n    } UNION {\n        {\n            {\n                SELECT ?component WHERE {\n                    ?view a nileaUi:UiView; \n                        nileaUi:forClass ?type ;\n                        nileaUi:viewComponent ?viewComponent .\n                         ?viewComponent nileaUi:hasComponent ?component .\n                }\n            }\n            ?component ?pComponent ?oComponent.\n        }\n    }\n}",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\n PREFIX nileaUi: <https://zazuko.com/nilea/ui/> \n\n  CONSTRUCT {\n      ?view ?pView ?oView .\n      ?viewContainer ?pViewContainer ?oViewContainer.\n      ?component ?pComponent ?oComponent.\n  } WHERE {\n    {\n        {\n            SELECT ?view  WHERE {\n                ?view a nileaUi:UiView; \n                    nileaUi:forClass ?type .\n            }\n        }\n        ?view ?pView ?oView .\n    } UNION {\n        {\n            {\n                SELECT ?viewContainer WHERE {\n                    ?view a nileaUi:UiView; \n                        nileaUi:forClass ?type ;\n                        nileaUi:hasViewContainer ?viewContainer.\n                }\n            }\n            ?viewContainer ?pViewContainer ?oViewContainer.\n        }\n    } UNION {\n        {\n            {\n                SELECT ?component WHERE {\n                    ?view a nileaUi:UiView; \n                        nileaUi:forClass ?type ;\n                        nileaUi:hasViewContainer ?viewContainer .\n                          ?viewContainer nileaUi:hasComponent ?component .\n                }\n            }\n            ?component ?pComponent ?oComponent.\n        }\n    }\n  \n}\n\nVALUES (?type ) {\n  ( <http://schema.org/SoftwareApplication> )\n}",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ea: <http://example.org/ea/>\nPREFIX nileaUi: <https://zazuko.com/nilea/ui>\nPREFIX local: <http://localhost/ontolgoy/>\nSELECT * \nWHERE {\n  {\n    { ?0_subject rdfs:label ?0_centerLabel. }\n    UNION\n    {\n      ?0_subject (^ea:target/ea:source) ?0_sourceIri.\n      ?0_sourceIri rdfs:label ?0_sourceLabel.\n    }\n    UNION\n    {\n      ?0_subject (^ea:source/ea:target) ?0_destinationIri.\n      ?0_destinationIri rdfs:label ?0_destinationLabel.\n    }\n  }\n}\nVALUES (?0_subject ?0_componentIri ?0_componentDataIri) {\n  (<https://ld.bafu.zazukoians.org/edc/sam> <https://zazuko.com/nilea/ui/ApplicationArchimateContextDiagram> <https://zazuko.com/nilea/ui/ApplicationArchimateContextDiagram/data>)\n}",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ea: <http://example.org/ea/>\nPREFIX nileaUi: <https://zazuko.com/nilea/ui>\n\nPREFIX  local: <http://localhost/data> \n\nCONSTRUCT {\n    ?componentIri nileaUi:hasComponentData ?componentDataIri .\n    ?componentDataIri a nileaUi:ContextDiagramData;\n        local:center ?subject;\n    .\n    ?subject rdfs:label ?centerLabel .\n\n    # inFlow\n    ?inFlow ea:target ?subject .\n    ?inFlow ea:source ?sourceIri .\n    ?sourceIri rdfs:label ?sourceLabel .\n    ?inFlow ?flowP ?flowO .\n    ?inFlow <http://localhost/ontology/businessObjectsTransported> ?businessObject .\n    ?businessObject rdfs:label ?businessObjectLabel .\n\n    # outFlow\n    ?outFlow ea:source ?subject .\n    ?outFlow ea:target ?targetIri .\n    ?targetIri rdfs:label ?targetLabel .\n    ?outFlow ?flowP ?flowO .\n    ?outFlow <http://localhost/ontology/businessObjectsTransported> ?businessObject .\n    ?businessObject rdfs:label ?businessObjectLabel .\n    \n} WHERE {\n    {\n        ?subject rdfs:label ?centerLabel .\n    } UNION\n    {\n        ?subject ^ea:target ?inFlow .\n        ?inFlow ea:source ?sourceIri .\n        ?sourceIri rdfs:label ?sourceLabel .\n        VALUES ?flowP {\n          rdfs:label\n          ea:flowtype\n        }\n        ?inFlow ?flowP ?flowO .\n\n        OPTIONAL {\n            ?inFlow ^ea:assignment ?businessObject .\n            ?businessObject a ea:BusinessObject .\n            ?businessObject rdfs:label ?businessObjectLabel .\n        }\n        \n    } UNION {\n      ?subject ^ea:source ?outFlow .\n      ?outFlow ea:target ?targetIri .\n      ?targetIri rdfs:label ?targetLabel .\n        VALUES ?flowP {\n          rdfs:label\n          ea:flowtype\n        }\n        ?outFlow ?flowP ?flowO .\n\n        OPTIONAL {\n            ?outFlow ^ea:assignment ?businessObject .\n            ?businessObject a ea:BusinessObject .\n            ?businessObject rdfs:label ?businessObjectLabel .\n        }\n      }\n}\n\nVALUES (?subject ?componentIri ?componentDataIri) {\n  (<https://ld.bafu.zazukoians.org/edc/fews> <https://zazuko.com/nilea/ui/ApplicationArchimateContextDiagram> <https://zazuko.com/nilea/ui/ApplicationArchimateContextDiagram/data>)\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "````sql\nmysql> DESCRIBE users;\n+------------+--------------+------+-----+---------+----------------+\n| Field      | Type         | Null | Key | Default | Extra          |\n+------------+--------------+------+-----+---------+----------------+\n| id         | int(11)      | NO   | PRI | NULL    | auto_increment |\n| username   | varchar(255) | YES  |     | NULL    |                |\n| password   | varchar(255) | YES  |     | NULL    |                |\n| email      | varchar(255) | YES  |     | NULL    |                |\n| created_at | datetime     | YES  |     | NULL    |                |\n| updated_at | datetime     | YES  |     | NULL    |                |\n+------------+--------------+------+-----+---------+----------------+\n```",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\nPREFIX nileaUi: <https://zazuko.com/nilea/ui/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX database: <http://schema.table.org/>\nSELECT * WHERE {\n  {\n    VALUES ?tableP {\n      rdf:type\n      rdfs:label\n      database:column\n      database:hasUniqueContraint\n      database:hasForeignKey\n    }\n    <http://data.table.org/BIO-DB-DATA-metadata/DA_ALLAdressen_01_BIO> ?tableP ?tableO .\n  } UNION {\n        <http://data.table.org/BIO-DB-DATA-metadata/DA_ALLAdressen_01_BIO> database:hasForeignKey|database:hasUniqueContraint ?constraint .\n        ?constraint ?constraintP ?constraintO .\n\n  } UNION {\n    {\n      SELECT ?column WHERE {\n       <http://data.table.org/BIO-DB-DATA-metadata/DA_ALLAdressen_01_BIO> <http://schema.table.org/column> ?column .\n      }\n    }\n    VALUES ?columnPredicate { \n      rdf:type\n      rdfs:label \n      <http://schema.table.org/isNullable> \n      <http://schema.table.org/dataType>\n    }\n    ?column ?columnPredicate ?columnObject .\n  }\n\n} \n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\nPREFIX nileaUi: <https://zazuko.com/nilea/ui/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT * WHERE {\n  <http://data.table.org/wiski-db/stationsattribute/stationsnummer> ?p ?o .\n   \n\n} \n\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# SQL Database Table View\n\nThis is a Query for a SQL Table. Change the VALUES at the end to get another instance of a Table.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX schema: <http://schema.org/>\n\nPREFIX  nileaUi: <https://zazuko.com/nilea/ui/> \nPREFIX  local: <http://localhost/data> \nPREFIX database: <http://schema.table.org/>\n\n\nSELECT * WHERE {\n    {\n        # table props\n        VALUES ?tableP { \n            rdfs:label\n            database:contextLabel\n            database:column\n            database:hasUniqueContraint\n            database:hasForeignKey\n         }\n         ?subject ?tableP ?tableO .\n        \n    } UNION {\n        # unique contraint props\n        {\n            SELECT ?subject ?uniqueContraint WHERE {\n               ?subject database:hasUniqueContraint ?uniqueContraint .\n\n            }\n        }\n        VALUES ?uniqueContraintP { \n            rdf:type\n            schema:name\n            database:isPrimaryKey\n            database:hasDeterminant\n         }\n        \n        ?uniqueContraint ?uniqueContraintP ?uniqueContraintO .\n    } UNION {\n        # foreign key props\n        {\n            SELECT ?subject ?foreignKey WHERE {\n               ?subject database:hasForeignKey ?foreignKey .\n            }\n        }\n        VALUES ?foreignKeyP { \n            rdf:type\n            schema:name\n            database:sourceTable\n            database:sourceTableColumn\n            database:referenceTable\n            database:referenceTableColumn\n         }\n         ?foreignKey ?foreignKeyP ?foreignKeyO .\n    }\n    UNION {\n        # foreign key ref table and column props\n        {\n            SELECT ?subject ?foreignKey WHERE {\n               ?subject database:hasForeignKey ?foreignKey .\n            }\n        }\n         ?foreignKey database:referenceTable ?referenceTable .\n         ?referenceTable rdfs:label ?referenceTableLabel .\n         ?foreignKey database:referenceTableColumn ?referenceTableColumn .\n         ?referenceTableColumn rdfs:label ?referenceTableColumnLabel .\n    } UNION {\n        # finnaly columns \n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        VALUES ?columnP { \n            rdf:type\n            rdfs:label\n            database:contextLabel\n            database:isNullable\n            database:dataType\n         }\n         ?column ?columnP ?columnO .\n        \n    }\n    \n} \nVALUES ?subject { <http://data.table.org/BIO-DB-DATA-metadata/DA_ALLAdressen_01_BIO> }\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# This is the SPARQL Construct Query for this SQL Table\n\nThis query constructs the same output as we have in our Graph.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX schema: <http://schema.org/>\n\nPREFIX  nileaUi: <https://zazuko.com/nilea/ui/> \nPREFIX  local: <http://localhost/data> \nPREFIX database: <http://schema.table.org/>\n\n\nCONSTRUCT {\n    ?subject ?tableP ?tableO .\n    ?uniqueContraint ?uniqueContraintP ?uniqueContraintO .\n    ?foreignKey ?foreignKeyP ?foreignKeyO .\n    ?foreignKey database:referenceTable ?referenceTable .\n    ?referenceTable rdfs:label ?referenceTableLabel .\n    ?referenceTable database:column ?referenceTableColumn .\n    ?foreignKey database:referenceTableColumn ?referenceTableColumn .\n    ?referenceTableColumn rdfs:label ?referenceTableColumnLabel .\n    ?column ?columnP ?columnO .\n} WHERE {\n    {\n        # table props\n        VALUES ?tableP { \n            rdfs:label\n            database:contextLabel\n            database:column\n            database:hasUniqueContraint\n            database:hasForeignKey\n         }\n         ?subject ?tableP ?tableO .\n        \n    } UNION {\n        # unique contraint props\n        {\n            SELECT ?subject ?uniqueContraint WHERE {\n               ?subject database:hasUniqueContraint ?uniqueContraint .\n\n            }\n        }\n        VALUES ?uniqueContraintP { \n            rdf:type\n            schema:name\n            database:isPrimaryKey\n            database:hasDeterminant\n         }\n        \n        ?uniqueContraint ?uniqueContraintP ?uniqueContraintO .\n    } UNION {\n        # foreign key props\n        {\n            SELECT ?subject ?foreignKey WHERE {\n               ?subject database:hasForeignKey ?foreignKey .\n            }\n        }\n        VALUES ?foreignKeyP { \n            rdf:type\n            schema:name\n            database:sourceTable\n            database:sourceTableColumn\n            database:referenceTable\n            database:referenceTableColumn\n         }\n         ?foreignKey ?foreignKeyP ?foreignKeyO .\n    }\n    UNION {\n        # foreign key ref table and column props\n        {\n            SELECT ?subject ?foreignKey WHERE {\n               ?subject database:hasForeignKey ?foreignKey .\n            }\n        }\n         ?foreignKey database:referenceTable ?referenceTable .\n         ?referenceTable rdfs:label ?referenceTableLabel .\n         ?foreignKey database:referenceTableColumn ?referenceTableColumn .\n         ?referenceTableColumn rdfs:label ?referenceTableColumnLabel .\n    } UNION {\n        # finnaly columns \n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        VALUES ?columnP { \n            rdf:type\n            rdfs:label\n            database:contextLabel\n            database:isNullable\n            database:dataType\n         }\n         ?column ?columnP ?columnO .\n        \n    }\n    \n} \nVALUES ?subject { <http://data.table.org/BIO-DB-DATA-metadata/DA_ALLAdressen_01_BIO> }\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Now let's reshape it to get the output close to the component output to have less code to write\n\nLet's start with the Table Interface \n\n```typescript \nexport interface DatabaseTable {\n    iri: string;\n    label: string;\n    columns: DatabaseColumn[];\n}\n```\nStep 2 is the column interface. \n\n```typescript\n\nexport interface DatabaseColumn {\n    iri: string\n    label: string;\n    type: string;\n    settings: DatabaseColumnSettings[];\n    references: DatabaseReference[];\n}\n```\n\nDatbaseColumnSettings... \n\n```typescript\nexport interface DatabaseColumnSettings {\n    label: string;\n    isKey?: boolean;\n    isPrimaryKey?: boolean;\n}\n```\n\nDatabaseReference\n\n```typescript\nexport interface DatabaseReference {\n    isIncoming: boolean;\n    table: string;\n    column: string;\n}\n```\n\n\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX schema: <http://schema.org/>\n\nPREFIX nileaUi: <https://zazuko.com/nilea/ui/> \nPREFIX local: <http://localhost/data> \nPREFIX database: <http://schema.table.org/>\n\n\nCONSTRUCT {\n    ?componentIri nileaUi:hasComponentData ?subject .\n    # interface DatabaseTable \n    ?subject ?nileaTableP ?tableO .\n\n    # DatabaseColumn\n    ##  iri: string\n    ##  label: string;\n    ##  type: string;\n    ?column ?nileaColumnP ?columnO .\n   \n    # DatabaseColumn.settings: DatabaseColumnSettings[]\n    # export interface DatabaseColumnSettings {\n    # label: string;\n    # isKey?: boolean;\n    # isPrimaryKey?: boolean;\n    ## this is more difficult \n    ## its' about fk, pk, unique, and  nullable\n    ### unique\n    ?column nileaUi:hasSettings ?uniqueContraint.\n    ?uniqueContraint rdfs:label ?uniqueContraintLabel .\n    ?uniqueContraint nileaUi:isKey false .\n    ?uniqueContraint nileaUi:isPrimaryKey false.\n\n    ### pk\n    ?column nileaUi:hasSettings ?pkContraint.\n    ?pkContraint nileaUi:hasDeterminant ?column .\n    ?pkContraint nileaUi:isKey true .\n    ?pkContraint nileaUi:isPrimaryKey true .\n    ?pkContraint  rdfs:label ?pkContraintLabel .\n\n    ## fk\n    ?column nileaUi:hasSettings ?fk.\n    ?fk nileaUi:isKey true .\n    ?fk nileaUi:isPrimaryKey false .\n    ?fk  rdfs:label ?fkLabel .\n\n    ## nullable\n    ?column nileaUi:hasSettings ?nullableIri.\n    ?nullableIri nileaUi:isKey false .\n    ?nullableIri nileaUi:isPrimaryKey false .\n    ?nullableIri  rdfs:label ?nullableLabel .\n\n    # DatabaseReference \n    #toTable: string;\n    #toColumn: string;\n    ?column nileaUi:references ?referenceOutIri.\n    ?referenceOutIri nileaUi:isInbound false .\n    ?referenceOutIri nileaUi:table ?toTable .\n    ?toTable rdfs:label ?toTableLabel .\n    ?referenceOutIri nileaUi:column ?toColumn .\n    ?toColumn rdfs:label ?toColumnLabel . \n    # fromTable: string;\n    # fromColumn: string;\n    ?column nileaUi:references ?referenceInIri.\n    ?referenceInIri nileaUi:isInbound true .\n    ?referenceInIri nileaUi:table ?fromTable .\n    ?fromTable rdfs:label ?fromTableLabel .\n    ?referenceInIri nileaUi:column ?fromColumn .\n    ?fromColumn rdfs:label ?fromColumnLabel .  \n} WHERE {\n    {\n        # table props\n        VALUES (?tableP ?nileaTableP)  { \n            (rdfs:label rdfs:label)\n            (database:contextLabel nileaUi:contextLabel)\n            (database:column nileaUi:column)\n         }\n         ?subject ?tableP ?tableO .\n        \n    } UNION {\n        # columns props\n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        VALUES (?columnP ?nileaColumnP) { \n            (rdf:type rdf:type)\n            (rdfs:label rdfs:label)\n            (database:dataType nileaUi:dataType)\n         }\n         ?column ?columnP ?columnO . \n\n    } UNION {\n        # columns settings unique contraints\n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        ?uniqueContraint database:hasDeterminant ?column .\n        ?uniqueContraint database:isPrimaryKey false .\n        BIND(\"unique\" as ?uniqueContraintLabel)   \n    } UNION {\n        # columns settings pk contraints\n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        ?pkContraint database:hasDeterminant ?column .\n        ?pkContraint database:isPrimaryKey true .\n        BIND(\"PK\" as ?pkContraintLabel)   \n    } UNION {\n        # columns settings fk \n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        ?fk database:sourceTableColumn ?column .\n        BIND(\"FK\" as ?fkLabel)   \n    } UNION {\n        # columns settings non nullable \n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        ?column database:isNullable false.\n        # create a new iri for nullable\n        BIND(IRI(CONCAT(STR(?column),\"/non-nullable\")) as ?nullableIri)\n        BIND(\"not null\" as ?nullableLabel)   \n    } UNION {\n        # DatabaseReference OUT means FK\n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        ?referenceOut database:sourceTableColumn ?column .\n        ?referenceOut database:referenceTable ?toTable .\n        ?toTable rdfs:label ?toTableLabel .\n        ?referenceOut database:referenceTableColumn ?toColumn .\n        ?toColumn rdfs:label ?toColumnLabel .\n        BIND(IRI(CONCAT(STR(?referenceOut),'/out'))as ?referenceOutIri )\n    }\n    UNION {\n        # DatabaseReference IN\n         {\n            SELECT ?subject ?column WHERE {\n               ?subject database:column ?column .\n            }\n        }\n        ?referenceIn database:referenceTableColumn ?column .\n        ?referenceIn database:sourceTable ?fromTable .\n        ?fromTable rdfs:label ?fromTableLabel .\n        ?referenceIn database:sourceTableColumn ?fromColumn .\n        ?fromColumn rdfs:label ?fromColumnLabel .\n        BIND(IRI(CONCAT(STR(?referenceIn),'/in'))as ?referenceInIri )\n    }\n    \n    \n} \nVALUES (?subject ?componentIri ) { \n    (<http://data.table.org/BIO-DB-DATA-metadata/WS_BEWSystematik_BIO> nileaUi:SqlDatabseTable) }\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX nileaUi: <https://zazuko.com/nilea/ui/>\nPREFIX database: <http://schema.table.org/>\nCONSTRUCT {\n  \n  ?0_column ?0_nileaColumnP ?0_columnO.\n # ?0_column nileaUi:hasSettings ?0_uniqueContraint.\n \n}\nWHERE {\n  \n  \n    \n      { \n            SELECT ?0_subject ?0_column WHERE { \n                  ?0_subject database:column ?0_column. \n            } \n            }\n      VALUES (?columnP ?0_nileaColumnP) {\n        (rdf:type rdf:type)\n        (rdfs:label rdfs:label)\n        (database:dataType nileaUi:dataType)\n      }\n      ?0_column ?0_columnP ?0_columnO.\n    \n\n}\nVALUES (?0_subject ?0_componentIri ?0_componentDataIri) {\n  (<http://data.table.org/Plankton-metadata/Abfrage%20PP%20Biomasse%20pro%20m2%20%20pro%20See%20und%20Datum> <https://zazuko.com/nilea/ui/SqlDatabseTableComponent> <https://zazuko.com/nilea/ui/SqlDatabseTableComponent/data>)\n}\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://ld.bafu.zazukoians.org/query]\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ea: <http://example.org/ea/>\n\nPREFIX  nileaUi: <https://zazuko.com/nilea/ui/> \nPREFIX  local: <http://localhost/data> \n\nCONSTRUCT {\n    ?componentIri nileaUi:hasComponentData ?componentDataIri .\n    ?componentDataIri a nileaUi:ContextDiagramData;\n        nileaUi:hasSource ?sourceIri;\n        nileaUi:hasDestination ?destinationIri;\n        nileaUi:hasCenter ?subject;\n    .\n    ?sourceIri rdfs:label ?sourceLabel .\n    ?subject rdfs:label ?centerLabel .\n    ?destinationIri rdfs:label ?destinationLabel .\n} WHERE {\n    {\n        ?subject rdfs:label ?centerLabel .\n    } UNION\n    {\n        ?subject ^ea:target/ea:source ?sourceIri .\n        ?sourceIri rdfs:label ?sourceLabel .\n    } UNION {\n        ?subject ^ea:source/ea:target ?destinationIri .\n        ?destinationIri rdfs:label ?destinationLabel .\n    }\n} VALUES ?subject { <http://data.table.org/GWG-DB-DATA-metadata/DA_MESSSTELLEKLASSE_GWG> }\n",
    "metadata": {}
  }
]