[
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Viewers\n\n## Literal Viewers\n\n\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "#\n# Get all ClassMetadataShape with the label\n# \nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX nileaMetaShapes: <https://ld.flux.zazuko.com/shapes/metadata/>\nPREFIX dash: <http://datashapes.org/dash#>\n\nCONSTRUCT {\n    ?literalViewer ?literalViewerP ?literalViewerO.\n    ?path sh:inversePath ?pathO.\n  #  ?list rdf:rest ?listRest .\n    ?listRest rdf:first ?head ;\n               rdf:rest ?tail .\n    ?head ?p ?o .\n} WHERE {\n    {\n        BIND (<https://ld.flux.zazuko.com/schema/RepositoryDetailDeployedOnHost> as ?literalViewer)\n        VALUES ?literalViewerP {\n            rdf:type\n            rdfs:label\n            sh:path\n            sh:order\n            dash:viewer\n            sh:class\n        }\n        ?literalViewer ?literalViewerP ?literalViewerO.\n         OPTIONAL {\n             ?literalViewer sh:path ?path .\n             ?path sh:inversePath ?pathO.\n        }\n    }\n    UNION {\n        BIND (<https://ld.flux.zazuko.com/schema/RepositoryDetailDeployedOnHost> as ?literalViewer)\n        ?literalViewer sh:path ?list .\n        ?list rdf:rest* ?listRest .\n        ?listRest rdf:first ?head ;\n                  rdf:rest ?tail .\n        OPTIONAL {\n            ?head ?p ?o .\n        }\n    }\n}\n\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "`sh:class` is a mistake here. it should be `sh:targetClass`.\n\nI propose we support `sh:targetClass` and `sh:targetNode`. \n\nMigration query",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# GET ALL LITERAL VIEWER\nPREFIX dash: <http://datashapes.org/dash#>\n\nSELECT * WHERE {\n   ?literalViewer dash:viewer dash:LiteralViewer .\n\n   ?literalViewer ?p ?o.\n\n\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Tree View\n\nThis the SPARQL query to get the Tree Definition.",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bp: <https://flux.described.at/>\n\nCONSTRUCT {\n  ?group ?groupP ?groupO.\n  ?shape ?shapeP ?shapeO.\n  ?property ?propertyP ?propertyO.\n  ?propertyO sh:inversePath ?inversePath.\n}\nWHERE {\n  {\n    {\n      {\n        SELECT ?group WHERE {\n          BIND(<https://oci.described.at/Image> AS ?class)\n          ?shape sh:targetClass ?class;\n            sh:group ?group.\n          ?group rdf:type bp:Hierarchy.\n        }\n      }\n      VALUES ?groupP {\n        bp:hasRoot\n        bp:parent\n        rdfs:label\n        rdf:type\n      }\n      ?group ?groupP ?groupO.\n    }\n    UNION\n    {\n      {\n        SELECT ?root WHERE {\n          BIND(<https://oci.described.at/Image> AS ?class)\n          ?shape sh:targetClass ?class;\n            sh:group ?group.\n          ?group rdf:type bp:Hierarchy;\n            bp:hasRoot ?root.\n        }\n      }\n      ?root ((sh:property/sh:node)*) ?shape.\n      VALUES ?shapeP {\n        sh:targetClass\n        sh:group\n        rdfs:label\n        sh:property\n      }\n      ?shape ?shapeP ?shapeO.\n    }\n    UNION\n    {\n      {\n        SELECT ?root WHERE {\n          BIND(<https://oci.described.at/Image> AS ?class)\n          ?shape sh:targetClass ?class;\n            sh:group ?group.\n          ?group rdf:type bp:Hierarchy;\n            bp:hasRoot ?root.\n        }\n      }\n      ?root ((sh:property/sh:node)*) ?shape.\n      ?shape sh:property ?property.\n      VALUES ?1_propertyP {\n        sh:path\n        sh:node\n      }\n      ?property ?propertyP ?propertyO.\n      OPTIONAL { ?propertyO sh:inversePath ?inversePath. }\n    }\n  }\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "CONSTRUCT version of this...",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bp: <https://flux.described.at/>\n\nCONSTRUCT {\n  ?group ?groupP ?groupO.\n  ?shape ?shapeP ?shapeO.\n  ?property ?propertyP ?propertyO.\n  ?propertyO sh:inversePath ?inversePath.\n}\nWHERE {\n  {\n    {\n      {\n        SELECT ?group WHERE {\n          BIND(<https://oci.described.at/Image> AS ?class)\n          ?shape sh:targetClass ?class;\n            sh:group ?group.\n          ?group rdf:type bp:Hierarchy.\n        }\n      }\n      VALUES ?groupP {\n        bp:hasRoot\n        bp:parent\n        rdfs:label\n        rdf:type\n      }\n      ?group ?groupP ?groupO.\n    }\n    UNION\n    {\n      {\n        SELECT ?root WHERE {\n          BIND(<https://oci.described.at/Image> AS ?class)\n          ?shape sh:targetClass ?class;\n            sh:group ?group.\n          ?group rdf:type bp:Hierarchy;\n            bp:hasRoot ?root.\n        }\n      }\n      ?root ((sh:property/sh:node)*) ?shape.\n      VALUES ?shapeP {\n        sh:targetClass\n        sh:group\n        rdfs:label\n        sh:property\n      }\n      ?shape ?shapeP ?shapeO.\n    }\n    UNION\n    {\n      {\n        SELECT ?root WHERE {\n          BIND(<https://oci.described.at/Image> AS ?class)\n          ?shape sh:targetClass ?class;\n            sh:group ?group.\n          ?group rdf:type bp:Hierarchy;\n            bp:hasRoot ?root.\n        }\n      }\n      ?root ((sh:property/sh:node)*) ?shape.\n      ?shape sh:property ?property.\n      VALUES ?1_propertyP {\n        sh:path\n        sh:node\n      }\n      ?property ?propertyP ?propertyO.\n      OPTIONAL { ?propertyO sh:inversePath ?inversePath. }\n    }\n  }\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## This is the output we need\n\n```typescript\n\ninterface Element {\n    iri: string,\n    label: string,\n    classLabel: string,\n    icon: string, // fa-icon\n    color: string // colorIndex\n}\n\n```\n\nWe simulate an Array with an index property to render it...",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bp: <https://flux.described.at/>\nPREFIX oci: <https://oci.described.at/>\n\nPREFIX app: <https://ld.flux.zazuko.com/blueprint/app/>\n\nSELECT * WHERE {\n   {  \n      ?tree rdfs:label ?treeLabel .\n      BIND (0 as ?index)  \n      BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n      {\n         ?subject rdfs:label ?label .\n         ?subject rdf:type ?class .\n         BIND (0 as ?index)  \n      }\n      UNION\n      {\n         {\n            SELECT ?metaShape ?subject ?subject ?tree ?class ?viewLabel WHERE {\n               ?subject rdf:type ?class .\n               ?metaShape sh:targetNode ?class.  \n               ?member sh:group ?tree . \n               ?member sh:targetClass ?class .\n               ?member rdfs:label ?viewLabel .\n            }\n         }\n      \n         ?metaShape bp:faIcon ?icon ;\n            bp:colorIndex ?colorIndex ; \n            rdfs:label ?classLabel .\n         BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n      }\n\n   } \n   UNION {\n      ?tree rdfs:label ?treeLabel .\n      BIND (1 as ?index)  \n      BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n        {\n         ?subject oci:repository ?parent .\n         ?parent rdfs:label ?label .\n         ?parent rdf:type ?class .\n         BIND (1 as ?index)  \n      }\n      UNION\n      {\n         {\n            SELECT ?metaShape ?subject ?tree ?class WHERE {\n               ?subject oci:repository ?parent .\n               ?parent  rdf:type ?class .\n               ?metaShape sh:targetNode ?class.  \n               ?member sh:group ?tree . \n               ?member sh:targetClass ?class .\n            }\n         }\n      \n         ?metaShape bp:faIcon ?icon ;\n            bp:colorIndex ?colorIndex ; \n            rdfs:label ?classLabel .\n         \n         BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n      }\n\n   }\n    UNION {\n      ?tree rdfs:label ?treeLabel .\n      BIND (2 as ?index)  \n      BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n        {\n         ?subject oci:repository/oci:registry ?parent .\n         ?parent rdfs:label ?label .\n         BIND (2 as ?index)  \n      }\n      UNION\n      {\n         {\n            SELECT ?metaShape ?subject ?tree ?class WHERE {\n               ?subject oci:repository ?parent .\n               ?parent  rdf:type ?class .\n               ?metaShape sh:targetNode ?class.  \n               ?member sh:group ?tree . \n               ?member sh:targetClass ?class .\n            }\n         }\n      \n         ?metaShape bp:faIcon ?icon ;\n            bp:colorIndex ?colorIndex ; \n            rdfs:label ?classLabel .\n         \n         BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n      }\n\n   }\n}\nVALUES (?subject ?tree) {\n   (<https://ld.flux.zazuko.com/oci/registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v16.6.2> <https://ld.flux.zazuko.com/blueprint/app/OciTree>)\n}\n\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bp: <https://flux.described.at/>\nPREFIX oci: <https://oci.described.at/>\n\nPREFIX app: <http://localhost/app/>\n\nCONSTRUCT {\n   ?tree app:result ?resultIri .\n   ?resultIri rdfs:label ?viewLabel .\n   ?resultIri app:element ?newIri .\n   ?newIri app:index ?index .\n   ?newIri app:label ?label .\n   ?newIri app:classLabel ?classLabel .\n   ?newIri app:iri ?parent .\n   ?newIri app:icon ?icon .\n   ?newIri app:colorIndex ?colorIndex .\n\n} WHERE {\n   {  \n      ?tree rdfs:label ?treeLabel .\n      BIND (0 as ?index)  \n      BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n      {\n         ?subject rdfs:label ?label .\n         ?subject rdf:type ?class .\n         BIND (0 as ?index)\n         BIND (STR(?subject) AS ?parent)\n      }\n      UNION\n      {\n         {\n            SELECT ?metaShape ?subject ?subject ?tree ?class ?viewLabel WHERE {\n               ?subject rdf:type ?class .\n               ?metaShape sh:targetNode ?class.  \n               ?member sh:group ?tree . \n               ?member sh:targetClass ?class .\n               ?member rdfs:label ?viewLabel .\n            }\n         }\n      \n         ?metaShape bp:faIcon ?icon ;\n            bp:colorIndex ?colorIndex ; \n            rdfs:label ?classLabel .\n         BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n      }\n\n   } \n   UNION {\n      ?tree rdfs:label ?treeLabel .\n      BIND (1 as ?index)  \n      BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n        {\n         ?subject oci:repository ?parent .\n         ?parent rdfs:label ?label .\n         ?parent rdf:type ?class .\n         BIND (1 as ?index)  \n      }\n      UNION\n      {\n         {\n            SELECT ?metaShape ?tree ?class WHERE {\n               ?subject oci:repository ?parent .\n               ?parent  rdf:type ?class .\n               ?metaShape sh:targetNode ?class.  \n               ?member sh:group ?tree . \n               ?member sh:targetClass ?class .\n            }\n         }\n      \n         ?metaShape bp:faIcon ?icon ;\n            bp:colorIndex ?colorIndex ; \n            rdfs:label ?classLabel .\n         \n         BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n      }\n\n   }\n    UNION {\n      ?tree rdfs:label ?treeLabel .\n      BIND (2 as ?index)  \n      BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n        {\n         ?subject oci:repository/oci:registry ?parent .\n         ?parent rdfs:label ?label .\n         BIND (2 as ?index)  \n      }\n      UNION\n      {\n         {\n            SELECT ?metaShape ?tree ?class WHERE {\n               ?subject oci:repository ?parent .\n               ?parent  rdf:type ?class .\n               ?metaShape sh:targetNode ?class.  \n               ?member sh:group ?tree . \n               ?member sh:targetClass ?class .\n            }\n         }\n      \n         ?metaShape bp:faIcon ?icon ;\n            bp:colorIndex ?colorIndex ; \n            rdfs:label ?classLabel .\n         \n         BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n      }\n\n   }\n}\nVALUES (?subject ?tree) {\n   (<https://ld.flux.zazuko.com/oci/registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v16.6.2> <https://ld.flux.zazuko.com/blueprint/app/OciTree>)\n}\n\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Generated Query\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "\n        PREFIX sh: <http://www.w3.org/ns/shacl#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX bp: <https://flux.described.at/>\n        \n        PREFIX app: <http://localhost/app/>\n        \n        SELECT * WHERE {\n        \n         \n        {\n            ?tree rdfs:label ?treeLabel .\n            BIND (0 as ?index)  \n            BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (0 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?tree ?class WHERE {\n                        ?subject rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?tree . \n                        ?member sh:targetClass ?class .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n            }\n         } UNION \n\n        {\n            ?tree rdfs:label ?treeLabel .\n            BIND (1 as ?index)  \n            BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject <https://oci.described.at/repository> ?parent.\n ?parent rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (1 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?tree ?class WHERE {\n                        ?subject <https://oci.described.at/repository> ?parent.\n ?parent rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?tree . \n                        ?member sh:targetClass ?class .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n            }\n         } UNION \n\n        {\n            ?tree rdfs:label ?treeLabel .\n            BIND (2 as ?index)  \n            BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject <https://oci.described.at/registry> ?parent.\n ?parent rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (2 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?tree ?class WHERE {\n                        ?subject <https://oci.described.at/registry> ?parent.\n ?parent rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?tree . \n                        ?member sh:targetClass ?class .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n            }\n         } }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "\n        PREFIX sh: <http://www.w3.org/ns/shacl#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX bp: <https://flux.described.at/>\n        \n        PREFIX app: <http://localhost/app/>\n        \n        CONSTRUCT {\n           ?tree app:result ?resultIri .\n           ?resultIri rdfs:label ?viewLabel .\n           ?resultIri app:element ?newIri .\n           ?newIri app:index ?index .\n           ?newIri app:label ?label .\n           ?newIri app:classLabel ?classLabel .\n           ?newIri app:iri ?parent .\n           ?newIri app:icon ?icon .\n           ?newIri app:colorIndex ?colorIndex .\n        \n        } WHERE {\n         \n        {\n            ?tree rdfs:label ?treeLabel .\n            BIND (0 as ?index)  \n            BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (0 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?tree ?class WHERE {\n                        ?subject rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?tree . \n                        ?member sh:targetClass ?class .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n            }\n         } UNION \n\n        {\n            ?tree rdfs:label ?treeLabel .\n            BIND (1 as ?index)  \n            BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject <https://oci.described.at/repository> ?parent.\n ?parent rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (1 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?tree ?class WHERE {\n                        ?subject <https://oci.described.at/repository> ?parent.\n ?parent rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?tree . \n                        ?member sh:targetClass ?class .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n            }\n         } UNION \n\n        {\n            ?tree rdfs:label ?treeLabel .\n            BIND (2 as ?index)  \n            BIND(IRI(CONCAT(STR(?tree), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject <https://oci.described.at/repository>/<https://oci.described.at/registry> ?parent.\n ?parent rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (2 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?tree ?class WHERE {\n                        ?subject <https://oci.described.at/repository>/<https://oci.described.at/registry> ?parent.\n ?parent rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?tree . \n                        ?member sh:targetClass ?class .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?tree), '/result')) AS ?resultIri)\n            }\n         } }\nVALUES (?subject ?tree) {\n   (<https://ld.flux.zazuko.com/oci/registry.gitlab.com/gitlab-org/build/cng/gitlab-toolbox-ce:v16.6.2> <https://ld.flux.zazuko.com/blueprint/app/OciTree>)\n}\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Inventory Table\n\nThis is the SPARQL query to get the Inventory Definition.\nhttps://oci.described.at/Registry",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX oci: <https://oci.described.at/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?registry ?registryLabel ?repository ?repositoryLabel ?image ?imageLabel  WHERE {\n  ?registry a <https://oci.described.at/Registry> .\n  ?registry rdfs:label ?registryLabel . \n  ?registry ^oci:registry ?repository.\n  ?repository rdfs:label ?repositoryLabel.\n  ?repository a <https://oci.described.at/Repository> .\n  ?repository ^oci:repository ?image.\n  ?image rdfs:label ?imageLabel.\n  ?image a <https://oci.described.at/Image> .\n\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "Create that \n\n\n```typescript\n\ninterface Row {\n    rowIndex: number,\n    key<string>: string,\n}\n\ninterface Head {\n    key: string,\n    label: string,\n    icon: string, // fa-icon\n    color: string // colorIndex\n}",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX data: <http://localhost/data/>\n        PREFIX bp: <https://flux.described.at/>\n        PREFIX sh: <http://www.w3.org/ns/shacl#>\n        CONSTRUCT {\n            data:TableInstance a bp:Table .\n            data:TableInstance bp:hasHeader ?header .\n            ?header ?tableP ?metaO .\n            ?header bp:rowIndex ?rowIndex .\n          \n            ?instance a ?class .\n            ?instance rdfs:label ?label .\n            ?instance bp:key ?key .\n          \n            data:TableInstance bp:hasRow ?row .\n            ?row bp:cell ?var_0, ?var_1, ?var_2 .\n        }\n         WHERE { \n        {\n            VALUES (?rowIndex ?rowClass) {\n                (0 <https://oci.described.at/Registry>)\n(1 <https://oci.described.at/Repository>)\n(2 <https://oci.described.at/Image>)\n            }\n            ?rowClass ^sh:targetNode ?meta .\n             VALUES (?metaP ?tableP) {\n                (bp:colorIndex bp:colorIndex)\n                (bp:faIcon bp:faIcon)\n                (rdfs:label bp:key)\n            }\n            ?meta  ?metaP ?metaO .\n            BIND (IRI(CONCAT(STR(data:table), \"/header\", STR(?rowIndex))) AS ?header)\n          }\n         UNION \n        {\n            {\n              SELECT ?instance ?class WHERE {\n                VALUES ?class {\n                    <https://oci.described.at/Registry>\n<https://oci.described.at/Repository>\n<https://oci.described.at/Image>\n                }\n                ?instance a ?class .\n              }\n            }\n            ?instance rdfs:label ?label .\n            ?class ^sh:targetNode ?meta .\n            ?meta rdfs:label ?key .\n        }\n         UNION \n        {\n            {\n              SELECT ?var_0 ?var_1 ?var_2 WHERE {\n                ?var_0 a <https://oci.described.at/Registry> .\n?var_0 ^<https://oci.described.at/registry> ?var_1 .\n\n?var_1 a <https://oci.described.at/Repository> .\n?var_1 ^<https://oci.described.at/repository> ?var_2 .\n\n?var_2 a <https://oci.described.at/Image> .\n\n              }\n            }\n            BIND (UUID() AS ?row)\n        }\n         }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX data: <http://localhost/data/>\nPREFIX bp: <https://flux.described.at/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\n\nCONSTRUCT {\n    data:TableInstance a bp:Table .\n    data:TableInstance bp:hasHeader ?header .\n    ?header ?tableP ?metaO .\n    ?header bp:rowIndex ?rowIndex .\n  \n    ?instance a ?class .\n    ?instance rdfs:label ?label .\n    ?instance bp:key ?key .\n  \n    data:TableInstance bp:hasRow ?row .\n    ?row bp:cell ?var_0, ?var_1, ?var_2 .\n}\nWHERE\n{ \n{\nVALUES (?rowIndex ?rowClass) {\n(0 <https://oci.described.at/Registry>)\n(1 <https://oci.described.at/Repository>)\n(2 <https://oci.described.at/Image>)\n}\n?rowClass ^sh:targetNode ?meta .\nVALUES (?metaP ?tableP) {\n(bp:colorIndex bp:colorIndex)\n(bp:faIcon bp:faIcon)\n(rdfs:label bp:key)\n}\n?meta  ?metaP ?metaO .\nBIND (IRI(CONCAT(STR(data:table), \"/header\", STR(?rowIndex))) AS ?header)\n}\nUNION \n{\n  {\n    SELECT ?instance ?class WHERE {\n      VALUES ?class {\n      <https://oci.described.at/Registry>\n      <https://oci.described.at/Repository>\n      <https://oci.described.at/Image>\n      }\n      ?instance a ?class .\n    }\n  }\n  ?instance rdfs:label ?label .\n  ?class ^sh:targetNode ?meta .\n  ?meta rdfs:label ?key .\n}\nUNION \n{\n{\nSELECT ?var_0 ?var_1 ?var_2 WHERE {\n?var_0 a <https://oci.described.at/Registry> .\n?var_0 ^<https://oci.described.at/registry> ?var_1 .\n\n?var_1 a <https://oci.described.at/Repository> .\n?var_1 ^<https://oci.described.at/repository> ?var_2 .\n\n?var_2 a <https://oci.described.at/Image> .\n\n}\n}\nBIND (UUID() AS ?row)\n}\n}",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "\n        PREFIX sh: <http://www.w3.org/ns/shacl#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX bp: <https://flux.described.at/>\n        \n        PREFIX app: <http://localhost/app/>\n        \n        CONSTRUCT {\n           ?componentIri rdfs:label ?viewLabel .\n           ?componentIri rdf:type ?treeType .\n           ?componentIri app:result ?resultIri .\n           ?resultIri app:element ?newIri .\n           ?newIri app:index ?index .\n           ?newIri app:label ?label .\n           ?newIri app:classLabel ?classLabel .\n           ?newIri app:iri ?parent .\n           ?newIri app:icon ?icon .\n           ?newIri app:colorIndex ?colorIndex .\n        \n        } WHERE {\n         \n        {\n            ?componentIri rdf:type ?treeType .\n            BIND (0 as ?index)  \n            BIND(IRI(CONCAT(STR(?componentIri), \"/element\", STR(?index))) AS ?newIri)\n              {\n                ?subject rdfs:label ?label.\n               ?parent rdfs:label ?label .\n               BIND (0 as ?index)  \n            }\n            UNION\n            {\n               {\n                    SELECT ?metaShape ?subject ?componentIri ?class ?viewLabel WHERE {\n                        ?subject rdf:type ?class.\n                        ?metaShape sh:targetNode ?class.  \n                        ?member sh:group ?componentIri . \n                        ?member sh:targetClass ?class .\n                        ?member rdfs:label ?viewLabel .\n                    }\n               }\n            \n               ?metaShape bp:faIcon ?icon ;\n                  bp:colorIndex ?colorIndex ; \n                  rdfs:label ?classLabel .\n               \n               BIND(IRI(CONCAT(STR(?componentIri), '/result')) AS ?resultIri)\n            }\n        } \n }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX data: <http://localhost/data/>\nPREFIX bp: <https://flux.described.at/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\n\nCONSTRUCT {\n    data:TableInstance a bp:Table .\n    data:TableInstance bp:hasHeader ?header .\n    ?header ?tableP ?metaO .\n    ?header bp:columnIndex ?columnIndex .\n  \n    ?instance a ?class .\n    ?instance rdfs:label ?label .\n    ?instance bp:key ?key .\n  \n    data:TableInstance bp:hasRow ?row .\n    ?row bp:cell ?var_0, ?var_1, ?var_2, ?var_3, ?var_4 .\n}\nWHERE \n{ \n  {\n    VALUES (?columnIndex ?rowClass) {\n      (0 <https://k8s.described.at/Namespace>)\n      (1 <https://k8s.described.at/Ingress>)\n      (2 <https://k8s.described.at/Deployment>)\n      (3 <https://k8s.described.at/StatefulSet>)\n      (4 <https://k8s.described.at/Host>)\n    }\n    ?rowClass ^sh:targetNode ?meta .\n    VALUES (?metaP ?tableP) {\n      (bp:colorIndex bp:colorIndex)\n      (bp:faIcon bp:faIcon)\n      (rdfs:label bp:key)\n    }\n    ?meta  ?metaP ?metaO .\n    BIND (IRI(CONCAT(STR(data:table), \"/header\", STR(?columnIndex))) AS ?header)\n  }\n  UNION \n  {\n{\n  SELECT ?instance ?class WHERE {\n    VALUES ?class {\n        <https://k8s.described.at/Namespace>\n<https://k8s.described.at/Ingress>\n<https://k8s.described.at/Deployment>\n<https://k8s.described.at/StatefulSet>\n<https://k8s.described.at/Host>\n    }\n    ?instance a ?class .\n  }\n}\n?instance rdfs:label ?label .\n?class ^sh:targetNode ?meta .\n?meta rdfs:label ?key .\n}\nUNION \n{\n  {\n    SELECT ?var_0 ?var_1 ?var_2 ?var_3 ?var_4 WHERE {\n      ?var_0 a <https://k8s.described.at/Namespace> .\n\n      ?var_1 a <https://k8s.described.at/Ingress> .\n      # var ?var_1\n      ?var_0 ^<https://k8s.described.at/namespace> ?var_1 .\n\n      ?var_2 a <https://k8s.described.at/Deployment> .\n      # var ?var_2\n      ?var_1 ^<https://k8s.described.at/namespace> ?var_2 .\n\n      ?var_3 a <https://k8s.described.at/StatefulSet> .\n      # var ?var_3\n      ?var_2 ^<https://k8s.described.at/namespace> ?var_3 .\n    }\n  }\n  BIND (UUID() AS ?row)\n  }\n}",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "       PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    PREFIX bp: <https://flux.described.at/>\n    PREFIX sh: <http://www.w3.org/ns/shacl#>\n\n    CONSTRUCT {\n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0> a <https://zazuko.com/nilea/ui/UiView> .\n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0> <https://zazuko.com/nilea/ui/forClass> <https://k8s.described.at/Namespace> .\n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0> <https://zazuko.com/nilea/ui/hasViewContainer>  <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0/viewContainer> .\n        \n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0/viewContainer> a  <https://zazuko.com/nilea/ui/ViewContainer> . \n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0/viewContainer> sh:order 1 .\n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0/viewContainer> sh:order 1 .\n        <https://ld.flux.zazuko.com/blueprint/app/K8SClusterTree/view/0-0/viewContainer> <https://zazuko.com/nilea/ui/hasComponent>?componentIri .\n        \n        ?componentIri <https://zazuko.com/nilea/ui/hasComponentDefinition> <https://zazuko.com/nilea/ui/TreeViewComponent> .\n        <https://zazuko.com/nilea/ui/TreeViewComponent> rdfs:label 'Tree'.\n        ?componentIri a <https://zazuko.com/nilea/ui/TreeViewComponent-1> .\n        ?componentIri  <https://zazuko.com/nilea/ui/hasComponentData> ?componentDataIri .\n        ?componentDataIri bp:hasRoot ?child_0 .\n      ?child_0 a bp:TreeRoot .\n \n       ?child_0 bp:instance ?subject.\n\n\n      ?subject rdfs:label ?label_0 .\n\n      ?subject  a ?class_0 .\n\n      ?child_0  bp:child ?child_1.\n\n     \n    }\n    \n    WHERE {\n      {\n        BIND(<https://k8s.described.at/Namespace> as ?class_0)\n?subject a ?class_0 .\n?subject rdfs:label ?label_0 .\nOPTIONAL {?componentDataIri rdfs:label ?xxx .} \nBIND (IRI(CONCAT(str(?subject),str(?componentDataIri) ,'fffffffffffffffffffff'))  AS ?child_0)\n\n      }\n    }\nVALUES (?subject ?componentIri ?componentDataIri ) {\n  (\n    <https://ld.flux.zazuko.com/k8s/cluster/do-fra1-tim/namespace/monitoring>\n    <1>\n    <2>\n  )\n}",
    "metadata": {}
  }
]